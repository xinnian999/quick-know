<template>
	<view class="image-library">
		<l-tabs v-model="type" :list="typeConfig" :space-evenly="false" />

		<button type="primary" size="mini" @click="upload">上传{{typeLabel}}图片</button>

		<l-loading v-if="loading" class="loading" />
		<view class="list" v-else>
			<view class="item" :key="item.img" v-for="item in list">
				<image class="img" :src="item.img" />
			</view>
		</view>
	</view>

</template>

<script setup>
	import {
		onMounted,
		ref,
		watch,
		computed
	} from 'vue';
	import {
		getList,
		uploadImages
	} from '@/api/images';

	const list = ref([])

	const loading = ref(false)

	const type = ref('plant')

	const typeLabel = computed(() => typeConfig.find(item => item.value === type.value)?.label)

	const typeConfig = [{
			value: 'plant',
			label: '植物',
		},
		{
			value: 'animal',
			label: '动物',
		},
		{
			value: 'build',
			label: '建筑',
		},
		{
			value: 'food',
			label: '美食',
		}
	]

	const fetchList = async () => {

		loading.value = true

		const res = await getList({
			type: type.value
		})

		list.value = res.Contents.filter(item => +item.Size > 0).map(item => ({
			...item,
			img: `https://quick-know666-1305519392.cos.ap-guangzhou.myqcloud.com/${item.Key}`
		}))

		loading.value = false
	}


	const upload = () => {

		uni.chooseImage({
			success: async (chooseImageRes) => {
				const files = chooseImageRes.tempFiles;

				const reqs = files.map(item => {
					const {
						type: flieType
					} = item
					return uploadImages({
						file: item,
						fileName: `${type.value}/image-${Date.now()}.${flieType.split('/').pop()}`
					})
				})

				await Promise.all(reqs)

				fetchList()
			}
		})
	}

	onMounted(fetchList)

	watch(type, () => {
		fetchList()
	})
</script>

<style lang="scss">
	.image-library {
		padding: 10px;
		display: flex;
		flex-direction: column;
		gap: 15px;
		position: relative;
	}

	.loading {
		width: 30px;
		margin: 0 auto;
		margin-top: 50px;
	}

	.list {
		height: 100%;
		width: 100%;
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 10px;

		.item {
			height: 150px;

			.img {
				width: 100%;
				height: 100%;
				border: 1px solid #eee;
				border-radius: 6px;
			}
		}

	}
</style>